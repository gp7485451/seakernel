cpu {
	key=CONFIG_SMP {
		name=Enable SMP support
		ans=y,n
		default=y
		desc=Enables multi-processor support
	}
	key=CONFIG_MAX_CPUS {
		name=Maximum Number of CPUs
		depends=CONFIG_SMP
		default=64
		desc=The maximum number of CPUs the kernel will support. If the
			 machine has more CPUs, they will not be initialized.
	}
}
process {
	key=CONFIG_MAX_TASKS {
		name=Maximum allowed simultaneous processes
		default=-1
		desc=The maximum allowed number of processes to run at the same time.
			 A value of negative 1 will disable a limit
	}
	key=CONFIG_STACK_PAGES {
		name=Number of pages for user-space stack
		default=20
		desc=The number of pages used by a user-space process for the stack.
	}
	key=CONFIG_BLOCK_CACHE {
		name=Enable system-wide caching of block devices
		ans=y,n
		default=y
		desc=Enables the kernel to keep recently accessed blocks in memory
			 for faster access later.
	}
	key=CONFIG_BLOCK_READ_CACHE {
		name=Enable read-caching of block devices
		ans=y,n
		depends=CONFIG_BLOCK_CACHE
		default=y
		desc=Enables blocks that were read to be stored immediately for
			 faster access later. If this is disabled, only writes will be cached.
	}
	key=CONFIG_SCHED_TTY {
		name=Prioritize tasks on current tty
		ans=y,n
		default=y
		desc=Runs the processes that are bound to the current tty more often,
			 hopefully giving a boost to responsiveness.
	}
	key=CONFIG_SCHED_TTY_AMOUNT {
		name=Amount of prioritization for tasks on current tty
		default=550
		depends=CONFIG_SCHED_TTY
		desc=This number is the number of times a task will be gauranteed
		to run before relinquishing its timeslice (EXPERIMENTAL)
	}
	
}
memory {
	key=CONFIG_CONTIGUOUS_MEMORY {
		name=Amount of contiguous ram to keep contiguous
		default=64
		ans=1,2,4,8,16,32,64,128
		desc=Allocates a certain amount of contiguous ram
		to serve to modules and kernel functions that need
		contiguous amounts of ram in sizes larger than a page, for
		example DMA operations.
	}
}
key=CONFIG_LOG_LEVEL {
	name=Console logging level
	ans=0,1,2,3,4,5,6,7,8,9
	default=4
	desc=The lowest message level which will get printed to the screen.
		 Lower levels are for debugging, higher levels are for errors.
}
key=CONFIG_GDB_STUB {
	name=Compile in the GDB kernel stub
	asn=y,n
	default=n
	desc=Compile the kernel GDB stub. This will allow you to connect GDB remotely
	and debug the kernel. This is only supported in x86.
}
key=CONFIG_MODULE_PATH {
	name=System module directory
	default=/sys/modules/
	desc=The location where modules will be stored in the filesystem.
} 
key=CONFIG_DEBUG {
	name=Kernel debugging features
	default=y
	ans=y,n
	desc=Enables various kernel features for debugging purposes. 
}
key=CONFIG_SERIAL_DEBUG {
	name=Serial port debug messages
	default=y
	ans=y,n
	desc=Print out log-level 0 messages to the serial port (can be slow on real hardware)
}
key=CONFIG_MODULES {
	name=Enable loadable module support
	ans=y,n
	default=y
	dnwv=n
	desc=Enables code to load and execute modules, as well as export kernel symbols.
		 This is required for most drivers.
}
key=CONFIG_SWAP {
	name=Enable swapping physical memory to disk
	ans=y,n
	default=n
	desc=This allows the kernel to free up physical memory by writing less-used pages
	to the hard drive. When needed, these pages will be brought back into ram on demand.
	THIS IS CURRENTLY BROKEN, SUPPORT FOR THIS WILL BE ADDED BACK IN FOR VERSION 0.4.
}
key=CONFIG_ENABLE_ASSERTS {
	name=Enable asserts in kernel code (for debugging)
	ans=y,n
	default=y
	desc=Asserts are included in kernel code to check runtime logic of kernel algorithms.
	This option allows them to be disabled (preventing a number of function calls and if
	statements useful for debugging only).
}

